#! /bin/sh
dummy=0
release=1
BUILDROOT=../build
HUMANDATE=`date "+%A, %d %B %Y"`

while :; do
  case "$1" in
  -n ) dummy=1 ; shift ;;
  -r | --release ) release=$2 ; shift 2 ;;
  -b | --buildroot ) BUILDROOT=$2 ; shift 2 ;;
  -- ) shift ; break ;;
  -* ) echo "Unknown option $1" ; exit 1 ;;
  * ) break ;;
  esac
done

case "$#" in
1 )	;;
* )	echo "Usage: $0 [-n] version" >&2 ;exit 1 ;;
esac
version=$1

PREP=${TMP:-/tmp}/eugridpma.$$
DIST=webegp@www.eugridpma.org:/project/srv/www/site/eugridpma/html/distribution/
RSYNC="rsync -rav -e ssh"
TARDISTNAME=eugridpma-policy-accredited-bundle-$version

mkdir $PREP
chmod 755 $PREP
mkdir $PREP/$version
mkdir $PREP/$version/worthless
mkdir $PREP/$version/others
mkdir $PREP/$version/accredited
mkdir $PREP/$version/discontinued

PREP=$PREP/$version

echo "This is version $version" > $PREP/version.txt

cat <<EOF > $PREP/worthless/README.txt

Version $version WORTHLESS root certificates

This area contains explicitly "worthless" root certificates. Do
not rely on these certificates in a real environment - you install
them entirely at your own risk!

Examples of worthless CAs include the "tutorial" on-line exercise
CA, and the Globus Certificate Service.
Especially the Globus Certificate Service is governed by this
disclaimer from the Globus web site:

"
The Globus Certificate Service is a service that issues low-quality
certificates to users who require certificates to use the Globus
Toolkit(C) and do not have other means of acquiring certificates.  The
Globus Certificate Service is not a true CA (for example, it does not
revoke or reissue certificates) and certificates from the Globus
Certificate Service are intended solely for experimentation and
testing.  Care should be taken when using certificates issued by it,
particularly on production resources.

We strongly encourage users to use more secure alternatives to the
Globus Certificate Service
"

EOF


cat <<EOF > $PREP/others/README.txt

Version $version other root certificates

This area contains non-accredited root certificates -- you install 
them entirely at your own risk! But they could be quite good as well,
but just not fitting the current set of guidelines.

Examples of "other" CAs include the Fermilab KerberosCA root.

EOF

cat <<EOF > $PREP/discontinued/README.txt

Version $version discontinued root certificates

This area contains non-accredited root certificates! Do not install
these unless you have yourself vetted these certificates and
understand the appropriate CP/CPS documents. This area contains
CAs that are *no longer part of the PMAs trust fabric*.

EOF



cat <<EOF > $PREP/README.txt

EUGridPMA Distribution of Authority Root Certificates
------------------------------------------------------------------------------

This is version $version of the distribution, built on $HUMANDATE.

The distribution contains root certificates and related meta-information: 
Certificate Revocation List (CRL) locations, contact information, and signing
policies. This distribution is subject to the EUGridPMA Charter and the
appropriate guidelines documents. 

The EUGridPMA itself does not provide identity assertions but instead 
asserts that - within the scope of its charter - the certificates issued by
the Accredited Authorities meet or exceed the relevant guidelines.

PLEASE NOTE that this assertion extends only to accredited authorities,
i.e., those authorities of which the trust anchor is contained in the
"accredited/" subdirectory of this distribution! 

You can install the trust anchors in the following ways:
* install all RPM or tar-ball packages from the "accredited/RPMS/" resp.
  "accredited/tgz/" directories manually
* use a RPM package manament system like "yum" to install the 
  meta-RPM "ca_policy_eugridpma-$version-$release.noarch.rpm"
* install all authorities with the accredited tarball bundle
  "eugridpma-policy-accredited-bundle-$version.tar.gz", using the 
  "./configure && make && make install" mechanism.
  This tarball can be found in the "accredited/" directory.

Please make sure you validate the correctness of the trust anchors with the
TERENA Academic CA Repository (https://www.tacar.org/) where possible.

This distribution contains, for your convenience, also selected other CAs 
in the "worthless/", "discontinued/" and "other/" directories. These are NOT 
part of the accredited trust fabric and you install these at your own risk.

Comments and suggestions for improvement of this distribution are welcome;
please send them to <info@eugridpma.org>. For more information, see
the web site:

	http://www.eugridpma.org/


EOF


# removed for clarity
#( cd .. ; tar zcvf $PREP/eugridpma-carep-$version.tar.gz \
#	--exclude "carep/accredited" \
#	--exclude "carep/others" \
#	--exclude "carep/worthless" \
#	--exclude "CVS" \
#	carep
#)

# build the tarball for distribution
TEMPDIR=`mktemp -d /tmp/eugridpma-dist-XXXXXX`
TARDIR=$TEMPDIR/$TARDISTNAME
mkdir $TARDIR
for i in `awk '{print $1}' accredited.in`
do
  # find the CA data to go with this (depends on .alias file)
  # and effectively expand the CVS structure
  for aliasfile in `find . -type f -a -name "*.alias"` 
  do
    s=`cat $aliasfile`
    if [ x"$s" = x"$i" ]; then
      f=`basename $aliasfile .alias`
      dir=`dirname $aliasfile`
      mkdir $TARDIR/$s
      cp -p $dir/$f.* $TARDIR/$s/
    fi
  done
done
cp -p dist-configure $TARDIR/configure
cp -p accredited.in $TARDIR/
( cd $TEMPDIR ; tar zcvf \
	$PREP/accredited/$TARDISTNAME.tar.gz \
	--exclude "CVS" \
	. 
)
rm -fr $TEMPDIR

cp -p accredited.in $PREP/accredited/
cp -p CHANGES $PREP/
cp -p GPG-KEY-EUGridPMA-RPM-3 $PREP/

# now copy the RPMs &c
cp -pr $BUILDROOT/* $PREP/

# normalise permissions and ownership
chmod 755 $PREP
chown -R `id -un`:`id -gn` $PREP

if [ $dummy -eq 0 ]; then
	( cd $PREP ; yum-arch . )
	mkaptdist $PREP
	( cd $PREP ; $RSYNC $PREP $DIST )
fi
